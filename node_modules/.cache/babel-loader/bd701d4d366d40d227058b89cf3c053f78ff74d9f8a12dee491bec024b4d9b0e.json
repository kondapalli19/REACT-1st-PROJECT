{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\reactJS\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleOnClick = () => {\n    console.log(\"Uppercase was Clicked\");\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const handleClick = () => {\n    console.log(\"lowercase was Clicked\");\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const ClearText = () => {\n    console.log(\"clear the text\");\n    let newText = \"\";\n    setText(newText);\n  };\n  const CopyText = () => {\n    console.log(\"copy the text\");\n    let newText = text.select();\n    navigator.clipboard.writeText(newText.value);\n    alert(\"Copied the text: \" + newText.value);\n  };\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            value: text,\n            rows: \"9\",\n            onChange: handleOnChange,\n            \"aria-describedby\": \"emailHelp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        className: \"btn btn-primary\",\n        onClick: handleOnClick,\n        children: \"Convert To UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        className: \"btn btn-primary\",\n        onClick: handleClick,\n        children: \"Convert To LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        className: \"btn btn-primary\",\n        onClick: ClearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        className: \"btn btn-primary\",\n        onClick: CopyText,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TextForm;\nTextForm.propTypes = {\n  heading: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","TextForm","props","handleOnClick","console","log","newText","text","toUpperCase","setText","handleOnChange","event","target","value","handleClick","toLowerCase","ClearText","CopyText","select","navigator","clipboard","writeText","alert","heading","propTypes","string","isRequired"],"sources":["C:/Users/Win10/Desktop/reactJS/my-app/src/components/TextForm.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleOnClick= () => {\r\n        console.log(\"Uppercase was Clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        \r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleClick= () => {\r\n      console.log(\"lowercase was Clicked\");\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      \r\n  }\r\n  const ClearText= () => {\r\n    console.log(\"clear the text\");\r\n    let newText = \"\";\r\n    setText(newText);\r\n    \r\n}\r\nconst CopyText= () => {\r\n  console.log(\"copy the text\");\r\n \r\n  let newText = text.select();\r\n  navigator.clipboard.writeText(newText.value);\r\n  alert(\"Copied the text: \" + newText.value);\r\n  \r\n}\r\n\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div>\r\n      <h1>{props.heading}</h1>\r\n      <form>\r\n  <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} rows=\"9\"onChange={handleOnChange} aria-describedby=\"emailHelp\"/>\r\n   \r\n  </div>\r\n\r\n\r\n  \r\n</form>\r\n    <button type=\"Submit\" className='btn btn-primary' onClick={handleOnClick}>Convert To UpperCase</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <button type=\"Submit\" className='btn btn-primary' onClick={handleClick}>Convert To LowerCase</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <button type=\"Submit\" className='btn btn-primary' onClick={ClearText}>Clear Text</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <button type=\"Submit\" className='btn btn-primary' onClick={CopyText}>Copy Text</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nTextForm.propTypes={\r\n    heading: PropTypes.string.isRequired\r\n    \r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,SAAS,MAAM,YAAY;AAAA;AAAA;AAGlC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACpC,MAAMC,aAAa,GAAE,MAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,EAAE;IAChCC,OAAO,CAACH,OAAO,CAAC;EAEpB,CAAC;EACD,MAAMI,cAAc,GAAIC,KAAK,IAAK;IAC9BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMC,WAAW,GAAE,MAAM;IACvBV,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,IAAIC,OAAO,GAAGC,IAAI,CAACQ,WAAW,EAAE;IAChCN,OAAO,CAACH,OAAO,CAAC;EAEpB,CAAC;EACD,MAAMU,SAAS,GAAE,MAAM;IACrBZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,IAAIC,OAAO,GAAG,EAAE;IAChBG,OAAO,CAACH,OAAO,CAAC;EAEpB,CAAC;EACD,MAAMW,QAAQ,GAAE,MAAM;IACpBb,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAE5B,IAAIC,OAAO,GAAGC,IAAI,CAACW,MAAM,EAAE;IAC3BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACf,OAAO,CAACO,KAAK,CAAC;IAC5CS,KAAK,CAAC,mBAAmB,GAAGhB,OAAO,CAACO,KAAK,CAAC;EAE5C,CAAC;EAEG,MAAM,CAACN,IAAI,EAAEE,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,oBACE;IAAA,uBACA;MAAA,wBACE;QAAA,UAAKG,KAAK,CAACqB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACxB;QAAA,uBACJ;UAAK,SAAS,EAAC,MAAM;UAAA,uBACnB;YAAU,SAAS,EAAC,cAAc;YAAC,KAAK,EAAEhB,IAAK;YAAC,IAAI,EAAC,GAAG;YAAA,QAAQ,EAAEG,cAAe;YAAC,oBAAiB;UAAW;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA;MAE5G;QAAA;QAAA;QAAA;MAAA,QAID,eACH;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAEP,aAAc;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS,oBACvG;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAEW,WAAY;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS,oBACrG;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAEE,SAAU;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,oBACzF;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAEC,QAAS;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,oBACvF;IAAA;MAAA;MAAA;MAAA;IAAA;EAAM,iBAEH;AAEP;AAAC,GArDuBhB,QAAQ;AAAA,KAARA,QAAQ;AAuDhCA,QAAQ,CAACuB,SAAS,GAAC;EACfD,OAAO,EAAEvB,SAAS,CAACyB,MAAM,CAACC;AAE9B,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}